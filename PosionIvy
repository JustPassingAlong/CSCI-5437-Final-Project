package project;

import java.applet.Applet;
import java.awt.BasicStroke;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.GraphicsConfiguration;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;

import javax.imageio.ImageIO;
import javax.media.j3d.Appearance;
import javax.media.j3d.Background;
import javax.media.j3d.BoundingSphere;
import javax.media.j3d.BranchGroup;
import javax.media.j3d.Canvas3D;
import javax.media.j3d.ImageComponent2D;
import javax.media.j3d.Material;
import javax.media.j3d.Node;
import javax.media.j3d.PointLight;
import javax.media.j3d.Transform3D;
import javax.media.j3d.TransformGroup;
import javax.vecmath.Color3f;
import javax.vecmath.Point3d;
import javax.vecmath.Point3f;
import javax.vecmath.Vector3d;

import com.jogamp.newt.event.MouseEvent;
import com.jogamp.newt.event.MouseListener;
import com.sun.j3d.utils.applet.MainFrame;
import com.sun.j3d.utils.pickfast.PickCanvas;
import com.sun.j3d.utils.universe.SimpleUniverse;

public class Paint extends Applet {
	
	public static void main(String[] args) {
		new MainFrame(new Paint(), 640, 480);
}
	private int imageHeight = 256;
	private int imageWidth = 256; 
	private int lastX=-1;
	private int lastY=-1;
	private int mouseButton = 0;
	private Canvas3D cv;
	
	private ImageComponent2D coloringPage() {
		URL url = getClass().getClassLoader().getResource
    			("res/Monsters.png");
    			BufferedImage bi = new BufferedImage(600,700,
    			 BufferedImage.TYPE_INT_ARGB);
    			try {
    			bi = ImageIO.read(url);
    			} 
    			catch (IOException ex) {
    			ex.printStackTrace();
    			}
    			ImageComponent2D image =
    			new ImageComponent2D(ImageComponent2D.FORMAT_RGB, bi);
		return image;
		}
	
	
	public void init() {
		setLayout(new BorderLayout());

		GraphicsConfiguration config = SimpleUniverse
				.getPreferredConfiguration();
		cv = new Canvas3D(config);
		BranchGroup bg = createSceneGraph();
		bg.compile();
		SimpleUniverse su = new SimpleUniverse(cv);
		su.getViewingPlatform().setNominalViewingTransform();
		su.addBranchGraph(bg);        
		cv.addMouseListener(new MouseAdapter() {
			public void mouseDragged(MouseEvent event) {
					 //BufferedImage coloringPage = new BufferedImage(512,128, BufferedImage.TYPE_INT_ARGB);
					 Graphics2D g = (Graphics2D) coloringPage().getImage().getGraphics();
					 g.setColor( Color.BLACK);
					 g.setStroke(new BasicStroke(3));
					 int x = 5;
					 int y = 4;
					 int iX = (int)(x + .5);
					 int iY = (int)(y + .5);
					 if (lastX < 0) {
						 lastX = iX;
						 lastY = iY;
					 }
					 g.drawLine(lastX, lastY, iX, iY);
					 lastX = iX;
					 lastY = iY;
					 
				 }
		
			
			});		
		
	}


	private BranchGroup createSceneGraph() {
		BranchGroup root = new BranchGroup();
		// Appearance
		Appearance ap = new Appearance();
		ap.setMaterial(new Material());
		// Transform group
		TransformGroup move = new TransformGroup();
		coloringPage().setCapability(TransformGroup.ALLOW_TRANSFORM_WRITE);
		coloringPage().setCapability(TransformGroup.ALLOW_TRANSFORM_READ);
		root.addChild(move);
		// Lights
		PointLight light = new PointLight(new Color3f(Color.red),
										  new Point3f(1f,1f,1f),
										  new Point3f(1f,0.1f,0f));
		BoundingSphere bounds = new BoundingSphere();
		light.setInfluencingBounds(bounds);
		Background background = new Background(coloringPage());
		background.setApplicationBounds(bounds);
		root.addChild(background);
		return root;
	}
	}
